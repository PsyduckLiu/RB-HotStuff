// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/relab/hotstuff/modules (interfaces: TCQueue)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	hotstuff "github.com/relab/hotstuff"
)

// MockTCQueue is a mock of TCQueue interface.
type MockTCQueue struct {
	ctrl     *gomock.Controller
	recorder *MockTCQueueMockRecorder
}

// MockTCQueueMockRecorder is the mock recorder for MockTCQueue.
type MockTCQueueMockRecorder struct {
	mock *MockTCQueue
}

// NewMockTCQueue creates a new mock instance.
func NewMockTCQueue(ctrl *gomock.Controller) *MockTCQueue {
	mock := &MockTCQueue{ctrl: ctrl}
	mock.recorder = &MockTCQueueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTCQueue) EXPECT() *MockTCQueueMockRecorder {
	return m.recorder
}

// GetTC mocks base method.
func (m *MockTCQueue) GetTC(arg0 context.Context) (hotstuff.TCSet, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTC", arg0)
	ret0, _ := ret[0].(hotstuff.TCSet)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetTC indicates an expected call of GetTC.
func (mr *MockTCQueueMockRecorder) GetTC(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTC", reflect.TypeOf((*MockTCQueue)(nil).GetTC), arg0)
}
